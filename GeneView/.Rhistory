library(destiny)
dm.predict
dm.predict()
dm.predict
dm.predict
dm_predict
help(extract_doublematrix)
??extract_doublematrix
??extract_doublematrix
help("dataset")
？？n_features
??n_features
??optimal_sigma
??Diagonal
Diagonal(x = 10^(3:1))
??optimal_sigma
??predict_censoring
library(destiny)
??destiny
data(guo)
dim(guo)
guo[1:4,1:4]
class(guo)
guo$Cell[1:4]
guo@experimentData[1:4,1:4]
guo@assayData[1:4,1:4]
guo[1:4,1:4]
guo@assayData$exprs[1:4,1:4]
Dark2 <- scales::brewer_pal(palette = 'Dark2')
palette(Dark2(8L))
Dark2
Dark2(8L)
dm_guo <- DiffusionMap(guo, verbose = FALSE,
censor_val = 10, censor_range = c(10, 40))
plot(dm_guo,
col = guo$num_cells, pch = 20)
sigmas <- find_sigmas(guo, verbose = FALSE,
censor_val = 10, censor_range = c(10, 40))
par(lwd = 3)
plot(sigmas,
col           = palette()[[1]],
col_highlight = palette()[[4]],
col_line      = palette()[[6]])
dm_guo_global <- DiffusionMap(guo, sigmas, verbose = FALSE,
censor_val = 10, censor_range = c(10, 40))
plot(dm_guo_global,
col = guo$num_cells, pch = 20)
help(DiffusionMap)
data(guo)
DiffusionMap(guo)
DiffusionMap(guo, 13, censor_val = 15, censor_range = c(15, 40), verbose = TRUE)
covars <- data.frame(covar1 = letters[1:100])
dists <- dist(matrix(rnorm(100*10), 100))
DiffusionMap(covars, distance = dists)
help("dm.predict")
help("dm_predict")
data(guo)
g1 <- guo[, guo$num_cells != 32L]
g2 <- guo[, guo$num_cells == 32L]
dm <- DiffusionMap(g1)
dc2 <- dm_predict(dm, g2)
plot(dm, new_dcs = dc2)
dc2
class(dc2)
dc2@x[1:4,1:4]
dim(dc2@x)
dc2@x
dc2@Dim
dim(g1)
dim(g2)
dc2@Dimnames
dc2@factors
dc2
help(plot)
??plot
help(DiffusionMap)
??prcomp
??ExpressionSet
guo
plot(dm_guo_global,
col = guo$num_cells, pch = 20)
exprs(guo)
library(Biostat)
library(Biobase)
exprs(guo)
dim(exprs(guo))
row.names(exprs(guo))
dm_guo_global
guo$num_cells
class(guo$num_cells)
??ColorBrewer
display.brewer.all()
library(ColorBrewer)
library(RColorBrewer)
display.brewer.all()
display.brewer.all(type = "qual")
display.brewer.all(type = "Set1")
display.brewer.pal(name = "Set1")
display.brewer.pal("Set1")
brewer.pal("Set1")
brewer.pal.info["Blues",]
display.brewer.pal(7, "Set1")
brewer.pal(7, "Set1")
help(dist)
??Rtsne
help(knn)
??knn
??monocle
help("dist")
25000*8/60/60
25000*8/60/60/50
help(cutreeDynamic)
??cutreeDynamic
help(cutree)
help(PCAPlot)
??PCAPlot
??DimPlot
??RunPCA
??FindClusters
??RunTSNE
??ggsave
??FindMarkers
??FeaturePlot
??group_by
??enrichr
??cacheGenericsMetaData
??cast
??melt
??ddply
??barplot
example(barplot2)
library(ggplot2)
??guide_legend
??DiffusionMap
??mapIds
library(org.Mm.eg.db)
??mapIds
help(mapIds)
??destiny
??match
help("match")
??ExpressionSet
??mnn
help("as.data.frame.raw")
help("as.data.frame")
help("data.matrix")
??dm_predict
install.packages("shiny")
library(shiny)
library(shiny); runApp('IHBH/Proj/R-Shiny/GeneExpression/GeneExpression.R')
runApp('IHBH/Proj/R-Shiny/GeneExpression/GeneExpression.R')
runApp('IHBH/Proj/R-Shiny/GeneExpression/GeneExpression.R')
runApp('IHBH/Proj/R-Shiny/GeneExpression/GeneExpression.R')
load("~/IHBH/Proj/mouseHSCreconstruction-Chengtao/expressionData/HSC-2017-10-29/SCENIC_MouseHSC/int/3.7_binaryRegulonActivity_nonDupl.RData")
ls()
class(binaryRegulonActivity_nonDupl)
dim(binaryRegulonActivity_nonDupl)
binaryRegulonActivity_nonDupl[1:2,1:2]
summary(binaryRegulonActivity_nonDupl)
unique(binaryRegulonActivity_nonDupl)
range(binaryRegulonActivity_nonDupl)
binaryRegulonActivity_nonDupl[1:4,1:2]
dim(binaryRegulonActivity_nonDupl)
rm()
ls()
rm(ls())
rm(list = ls())
ls()
help("phyper")
phyper((10-1), 10, (100-10), 50, lower.tail = F)
shiny::runApp('IHBH/Proj/R-Shiny/GeneExpBoom/GeneExpBoom')
help(args)
a <- installed.packages()
help("is.element")
# install 'optparse' package if it's not available
is.installed <- function(mypkg) is.element(mypkg, installed.packages()[,1])
if(!is.installed("optparse")){
warning("Detect package \"optparse\" is not installed in your R enviroment.")
warning("Trying to install the \"optparse\" package.")
warning("If failed, please try to install it mannually.")
install.packages("optparse")
}
help("install.packages")
ls()
shiny::runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
a <- 2
get(a)
help(get)
a
get(a)
get("a")
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
help(pheatmap)
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
pheatmap
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
help(normalizePath)
getwd()
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
help(fileInput)
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
plot(x=0,y=0, type = "n", axes = F,
xlim = c(0,10 +1), ylim = c(0, 10 +1))
plot(x=0,y=0, type = "n", axes = F, xlab = "", ylab = "",
xlim = c(0,10 +1), ylim = c(0, 10 +1))
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
a
nrow(a)
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
help(barplot)
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
help(par)
par("mar")
par("oma")
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
shiny::runApp('IHBH/Proj/R-Shiny/GeneView/GeneView')
